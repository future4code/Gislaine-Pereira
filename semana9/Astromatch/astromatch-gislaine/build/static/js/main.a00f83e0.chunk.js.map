{"version":3,"sources":["components/ImagensBackground.js","components/perfis.js","components/matchs.js","App.js","serviceWorker.js","index.js","img/logo.png","img/Coracao.gif","img/core.png"],"names":["ContainerMatch","styled","section","props","imagem","Informações","ImagemPerfil","div","CardPerfil","animado","Perfil","useState","perfil","setPerfil","mostraConteudo","setMostraConteudo","animacao","setAnimacao","useEffect","pegaPerfil","baseUrl","conteudoNaTela","axios","get","then","response","data","profile","catch","err","console","log","id","className","src","Coracao","alt","Logo","photo","name","age","bio","onClick","body","choice","post","variant","match","setMatch","matches","listaMatchs","map","pessoa","clicouPerfilMatch","key","apiUrl","useStyles","makeStyles","theme","createStyles","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","App","telaMostrada","escolheTela","setEscolheTela","open","setOpen","classes","confirmaExclui","fechaConfirma","escolhePerfis","escolheMatchs","AppBar","position","Toolbar","IconButton","aria-label","fontSize","Tooltip","title","arrow","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","put","autoFocus","CssBaseline","Core","Drawer","paper","anchor","List","ListItem","ListItemText","Divider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.a00f83e0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerMatch = styled.section `\n  background-size: cover;\n  background-image: url(${props => props.imagem});\n  background-repeat: no-repeat;\n  overflow: hidden;\n  background-position: center;\n  width: 13vw;\n  height: 13vw;\n  border-radius: 50%;\n  margin-right: 3vw;\n  box-shadow:  -3px 1px 4px 0px rgba(74, 163, 151, 0.7);\n  border: 2px solid #753192;\n`\nexport const Informações = styled.section `\n  background-size: cover;\n  background-image: url(${props => props.imagem});\n  background-repeat: no-repeat;\n  filter: blur(20px); \n  width: 87vw;\n  height: 120vw;\n  position: absolute;\n  z-index: 1;\n  background-position: center;\n`\nexport const ImagemPerfil = styled.div `\n  background-size: cover;\n  background-image: url(${props => props.imagem});\n  background-repeat: no-repeat;\n  height: 120vw;\n  width: 87vw;\n  overflow: hidden;\n  z-index: 2;\n  position: absolute;\n  background-position: center;\n`","import React, { useState, useEffect } from \"react\";\nimport \"./components.css\";\nimport styled from 'styled-components'\nimport axios from \"axios\";\nimport Botao from '@material-ui/core/Fab';\nimport IconMatch from '@material-ui/icons/Favorite'\nimport IconNoMatch from '@material-ui/icons/Close'\nimport Coracao from '../img/Coracao.gif'\nimport Logo from '../img/logo.png'\nimport { Informações } from './ImagensBackground.js'\nimport { ImagemPerfil } from './ImagensBackground.js'\n\nconst CardPerfil = styled.section`\n  animation: ${props =>{\n    switch (props.animado) {\n      case \"left\":\n        return \"left 1s linear 1;\"\n      \n      case \"right\":\n        return \"right 1s linear 1;\"\n      default:\n        return \"none\"\n    }\n  }};\n  \n  @keyframes left {\n    0% {transform: rotateZ(0deg) translate(0vw, 0vw); opacity: 1;}\n    100% {transform: rotateZ(-45deg) translate(-400vw, 200vh); opacity: 0;}\n  }\n\n  @keyframes right{\n    0% {transform: rotateZ(0deg) translate(0vw, 0vw); opacity:1}\n    100% {transform: rotateZ(45deg) translate(400vw, 200vh); opacity: 0; } /*xvw yvw*/\n  }\n`\n\nfunction Perfil(props) {\n  \n  const [perfil, setPerfil] = useState([]);\n  const [mostraConteudo, setMostraConteudo] = useState('icones')\n  const [animacao, setAnimacao] = useState('none')\n  \n  useEffect(() => {\n    pegaPerfil()}, \n  [props.baseUrl])\n\n  useEffect(() =>{\n    setAnimacao(\"none\")\n  }, [perfil])\n\n  const pegaPerfil = () => {\n    setMostraConteudo('icones')  \n    axios\n      .get(`${props.baseUrl}/person`)\n      .then(response => {\n        setPerfil(response.data.profile);\n        setMostraConteudo('perfis')\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  const gosteiPerfil = () => {    \n    setAnimacao(\"right\")\n    const body ={\n        id: perfil.id,\n        choice: true\n    }\n    axios\n      .post(`${props.baseUrl}/choose-person`, body)\n      .then(response => {\n        console.log(response.data)\n        pegaPerfil()\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    \n  }\n\n  const naoGosteiPerfil = () => {\n    setAnimacao('left')\n    const body = {\n      id: perfil.id,\n      choice: false\n    }\n    axios\n      .post(`${props.baseUrl}/choose-person`, body)\n      .then(response => {\n        console.log(response.data)\n        pegaPerfil()\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  let conteudoNaTela;\n    \n  if (mostraConteudo === 'icones') {\n      conteudoNaTela = <div id='loading'>\n        <img className='coracao-loading' src={Coracao} alt='Coração Pulsando'/>\n        <img id='logo-loading' src={Logo} alt='Logo'/>\n      </div>\n  } else{\n    if (perfil === null) {\n      conteudoNaTela = <div id='sem-perfis'>\n        <img className='coracao-loading' src={Coracao} alt='Coração Pulsando'/>\n        <h1>Acabaram os perfis</h1>\n        <p id='texto-acabou'>Aproveite para xavecar aquele match ou comece tudo novamente clicando na Lixeira</p>\n      </div>\n    }else{\n      conteudoNaTela = <div>\n        <CardPerfil id=\"card-pessoa\" animado={animacao}>\n          <Informações imagem= {perfil.photo} />\n          <ImagemPerfil imagem= {perfil.photo} />\n          <div id='textousuario'>\n            <p>{perfil.name}, {perfil.age}</p>\n            <p>{perfil.bio}</p>\n          </div>\n        </CardPerfil>\n      \n        <section id='container-botoes'> \n          <Botao \n            id='botao-x'\n            onClick ={naoGosteiPerfil}\n            variant =\"outlined\">\n            <IconNoMatch id='icone-x'/>\n          </Botao>\n      \n          <Botao \n            id='botao-coracao'\n            onClick ={gosteiPerfil}\n            variant =\"outlined\">\n            <IconMatch id='icone-coracao'/>\n          </Botao> \n        </section>\n      </div>\n    }\n  }\n\n  return (\n    <div id=\"App\" >\n      {conteudoNaTela}\n    </div>\n  );\n}\n\nexport default Perfil;\n","import React, { useState, useEffect } from \"react\";\nimport \"./components.css\";\nimport axios from \"axios\";\nimport { ContainerMatch } from './ImagensBackground.js'\n\nfunction Perfil(props) {\n\n  const [match, setMatch] = useState([\n  ]);\n\n\nuseEffect(() => {\n  axios\n    .get(`${props.baseUrl}/matches`)\n    .then(response => {\n      setMatch(response.data.matches)\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}, [match, props.baseUrl])\n\n  const clicouPerfilMatch = () =>{}\n\n  const listaMatchs = match.map((pessoa) => {\n  return <article onClick={clicouPerfilMatch()} className='perfis-match' key={pessoa.id}>\n            <ContainerMatch imagem= {pessoa.photo} />\n            <p>{pessoa.name}</p>\n    </article>\n  })\n\n  return (\n    <div className=\"App\">\n      {listaMatchs}\n    </div>\n  );\n}\n\nexport default Perfil;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Perfis from './components/perfis'\nimport Matchs from './components/matchs'\nimport IconMatch from '@material-ui/icons/Favorite'\nimport Left from '@material-ui/icons/Undo'\nimport Right from '@material-ui/icons/Redo'\nimport IconPerfil from '@material-ui/icons/Group'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Apagar from '@material-ui/icons/DeleteForever'\nimport axios from \"axios\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Logo from './img/logo.png'\nimport Core from './img/core.png'\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst apiUrl = \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/gislaine-costa-julian\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\nfunction App() {\n  const [escolheTela, setEscolheTela] = useState('perfis')\n  const [open, setOpen] = useState(false)\n  const classes = useStyles();\n  \n  const confirmaExclui = () => {\n    setOpen(true);\n  };\n\n  const fechaConfirma = () => {\n    setOpen(false);\n  };\n\n  \n  const apagaTudo = () =>{\n    console.log(\"funciou\")\n    const body ={\n        id: \"PatusZf4mHH6UoZfYC8I\"\n    }\n    axios\n      .put(`${apiUrl}/clear`, body)\n      .then(response => {\n        console.log(response.data)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    setOpen(false)\n    setEscolheTela('perfis')\n  }\n  \n  const escolhePerfis = () =>{\n    setEscolheTela('perfis')\n  }\n\n  const escolheMatchs = () =>{\n    setEscolheTela('matchs')\n  }\n\n  let telaMostrada;\n    \n  if (escolheTela === 'perfis') {\n      telaMostrada = <Perfis baseUrl={apiUrl}/>\n    } else {\n      telaMostrada = <Matchs baseUrl={apiUrl}/>\n  }\n\n  return (\n    <div className=\"App\">\n        <AppBar id=\"cabecalho-mobile\" position=\"static\" >\n          <Toolbar className='Cabecalho' >\n            <IconButton onClick={escolhePerfis} aria-label=\"Ver Matchs\" >\n              <div id='icone-perfil' >\n                <IconPerfil fontSize={'large'} className='iconeRoxo'/>\n                <Left fontSize={'small'} className='iconeRoxo'/>\n                <Right fontSize={'small'} className='iconeRoxo'/>\n              </div>\n            </IconButton>\n\n            <IconButton IconButton onClick={escolheMatchs} id=\"icone-match\" aria-label=\"Ver Matchs\" >\n              <IconMatch fontSize={'large'} className='iconeRoxo'/>\n            </IconButton>\n\n            <Tooltip title=\"Apagar Tudo\" arrow >\n              <IconButton onClick={confirmaExclui} aria-label=\"Resetar\" >\n                <Apagar fontSize={'large'} className='iconeRoxo'/>\n              </IconButton>\n            </Tooltip>\n            <Dialog\n              open={open}\n              onClose={fechaConfirma}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              id='dialogo'\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Você tem certeza que quer resetar?\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  Isso irá apagar todos os matchs e todas as suas escolhas\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button id=\"botao-confimra\" onClick={fechaConfirma} >\n                  Não\n                </Button>\n                <Button onClick={apagaTudo} id=\"botao-confimra\" autoFocus>\n                  Sim\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Toolbar>\n        </AppBar>\n\n        <div id='menu-desktop' className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar id=\"cabeçalho\">\n              <img className='logo' src={Core} alt='coração'/>\n              <img className='logo' src={Logo} alt='Logo'/>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            anchor=\"left\"\n          >\n            <List>\n                <ListItem id='titulo-menu'>\n                    <MenuIcon fontSize={'large'} className='iconeRoxo'/>\n                    <ListItemText className=\"texto-menu\"> MENU </ListItemText>\n                </ListItem>\n                <Divider />\n              \n                <section id=\"lista-menus\">\n                  <ListItem className=\"item-lista\" onClick={escolhePerfis}>\n                      <IconPerfil fontSize={'large'} className='iconeRoxo'/>\n                      <ListItemText className=\"texto-menu\"> Visualizar Perfis </ListItemText>\n                  </ListItem>\n                  <ListItem className=\"item-lista\" onClick={escolheMatchs}>\n                      <IconMatch fontSize={'large'} className='iconeRoxo'/>\n                      <ListItemText className=\"texto-menu\"> Visualizar Matchs </ListItemText>\n                  </ListItem>\n                  <ListItem className=\"item-lista\" onClick={confirmaExclui}>\n                      <Apagar fontSize={'large'} className='iconeRoxo'/>\n                      <ListItemText className=\"texto-menu\"> Resetar tudo </ListItemText>\n                  </ListItem>\n                </section>\n            </List>\n          </Drawer> \n        </div>\n        \n      <section id='conteudo-principal'>\n        {telaMostrada}\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a4a9eaf7.png\";","module.exports = __webpack_public_path__ + \"static/media/Coracao.96cb615a.gif\";","module.exports = __webpack_public_path__ + \"static/media/core.c6516da3.png\";"],"sourceRoot":""}